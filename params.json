{"name":"Rcomplete","tagline":"JavaScript Auto Complete, simple and beautiful.","body":"rComplete 1.1.1\r\n===============\r\n\r\nJavaScript auto-complete library, simple and beautiful.\r\n\r\nEasy to use, easy to costumize, easy to hack.\r\n\r\nNo dependency on any other library.\r\nOnly **4.6K** for production!\r\n\r\nSee\r\n[Development(11K)](https://raw.githubusercontent.com/ranmocy/rComplete/v1.1.1/rComplete.js)\r\nor\r\n[Production(4.6K)](https://cdn.rawgit.com/ranmocy/rComplete/v1.1.1/rComplete.min.js)\r\n\r\n## Demo\r\n\r\nCheck out the [Demo](http://complete.ranmocy.info/demo.html) here.\r\n\r\n## Usage\r\n\r\nAdd to your HTML header:\r\n\r\n```HTML\r\n<script type=\"text/javascript\" src=\"https://cdn.rawgit.com/ranmocy/rComplete/v1.0.0/rComplete.min.js\"></script>\r\n```\r\n\r\nAnd enable auto complete:\r\n\r\n```javascript\r\nvar rc = rComplete($('#container'));\r\nrc.setOptions([\"option1\", \"option2\", \"option3\"]);\r\n```\r\n\r\nYou may also wish that it looks pretty:\r\n\r\n```CSS\r\n.complete-hint, .complete-input, .complete-dropdown {\r\n    font-size: 20px;\r\n}\r\n.complete-hint, .complete-input {\r\n    border: 1px solid #888;\r\n    border-radius: 8px;\r\n    outline: none;\r\n    padding: 0.3em 0.5em;\r\n    box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    -webkit-box-sizing: border-box;\r\n}\r\n.complete-dropdown {\r\n    border: 1px solid #bbb;\r\n    border-radius: 10px;\r\n    margin: 10px 0;\r\n    width: 100%;\r\n    text-align: left;\r\n}\r\n.complete-dropdown-item {\r\n    color: #444;\r\n    padding: 0.3em 0.5em;\r\n    cursor: default;\r\n}\r\n.complete-dropdown-item+.complete-dropdown-item {\r\n    border-top: 1px solid #888;\r\n}\r\n.complete-dropdown-item.hovered {\r\n    color: #1E98FF;\r\n}\r\n```\r\n\r\nThat's it!\r\n\r\n## Customize\r\n\r\nYou can pass in personal configs as:\r\n\r\n```javascript\r\nvar rc = rComplete($('#container'), {\r\n    placeholder: \"Placeholder\",\r\n    matcher: function(a, b) { return new RegExp(\"^\" + a, \"i\").test(b); }\r\n});\r\n```\r\n\r\n* **placeholder**: placeholder when input is empty, default is \"Placeholder\".\r\n* **matcher**: a function to compare whether input `a` matches option `b`.\r\n\r\nAnd also CSS classes:\r\n\r\n* **.complete-wrapper**: the wrapper under the container\r\n* **.complete-input**: where user can type\r\n* **.complete-hint**: where the hint exists\r\n* **.complete-dropdown**: where the dropdown options exists\r\n\r\nAnd manipulate with JavaScript:\r\n\r\n```javascript\r\nrc.setOptions(options)    // set the options, OPTIONS is a array of strings\r\nrc.getOptions()           // returns the options\r\nrc.setText(text)          // manually set the input text to TEXT\r\nrc.getText()              // returns the value of the input\r\n\r\nrc.wrapper    // access to the wrapper node\r\nrc.input      // access to the input node\r\nrc.hint       // access to the hint node\r\nrc.dropdown   // access to the dropdown node\r\n\r\nrc.on(name, callback) // bind CALLBACK on NAME event\r\n```\r\n\r\nAvailable event names:\r\n\r\n* **complete**: when input element complete to one option\r\n* **change**: when input element changed\r\n* **focus**: when focus on input element\r\n* **leave**: when leave the input element\r\n\r\n## Dev\r\n\r\n* [UglifyJS2](https://github.com/mishoo/UglifyJS2): `npm install uglify-js -g`\r\n","google":"UA-20961770-11","note":"Don't delete this file! It's used internally to help with page regeneration."}